// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  username      String?
  accounts      Account[]
  sessions      Session[]
  UserOtherData UserOtherData[]
  UserClient    UserClient[]
}

model UserOtherData {
  id        String   @id @default(cuid())
  userId    String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Client {
  id              String       @id @default(cuid())
  socialReason    String       @unique
  dateStartTrial  DateTime
  dateEndTrial    DateTime
  siret           String       @unique
  ape             String
  address1        String
  address2        String?
  address3        String?
  address4        String?
  city            String
  codeZip         String
  country         String
  billingAddress1 String
  billingAddress2 String?
  billingAddress3 String?
  billingAddress4 String?
  billingCity     String
  billingCodeZip  String
  billingCountry  String
  isBlocked       Boolean
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  createdBy       String
  UserClient      UserClient[]
  Invitation      Invitation[]
}

model UserClient {
  id              String   @id @default(cuid())
  userId          String
  clientId        String
  isBlocked       Boolean
  isBillable      Boolean
  isAdministrator Boolean
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  client          Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
}

model Invitation {
  id        String   @id @default(cuid())
  email     String   @unique
  sendEmail Boolean
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String
  clientId  String
  client    Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
}
