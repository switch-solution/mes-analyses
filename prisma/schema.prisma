// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // uses connection pooling
  directUrl = env("DATABASE_URL_UNPOOLED") // uses a direct connection
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id              String            @id @default(cuid())
  name            String?
  email           String            @unique
  emailVerified   DateTime?
  image           String?
  username        String?
  accounts        Account[]
  sessions        Session[]
  UserOtherData   UserOtherData[]
  UserClient      UserClient[]
  UserProject     UserProject[]
  UserSoftware    UserSoftware[]
  Project_Approve Project_Approve[]
}

model UserOtherData {
  userId     String   @id
  firstname  String?
  lastname   String?
  password   String?
  civility   String?
  cgv        Boolean  @default(false)
  gdpr       Boolean  @default(false)
  isBlocked  Boolean
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isInternal Boolean  @default(false)
  isSetup    Boolean  @default(false)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Client {
  slug                      String                      @unique
  socialReason              String
  dateStartTrial            DateTime?
  dateEndTrial              DateTime?
  siren                     String                      @id
  isBlocked                 Boolean
  invoiceStart              DateTime?
  invoiceEnd                DateTime?
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  createdBy                 String
  UserClient                UserClient[]
  Invitation                Invitation[]
  Software                  Software[]
  Project                   Project[]
  Logger                    Logger[]
  Client_Classification     Client_Classification[]
  Client_Task               Client_Task[]
  Client_API                Client_API[]
  Client_Constant_Legal     Client_Constant_Legal[]
  Client_Table_Seniority    Client_Table_Seniority[]
  Client_Table_Age          Client_Table_Age[]
  Client_Table_Keeping_Wage Client_Table_Keeping_Wage[]
  Client_Table_Wage         Client_Table_Wage[]
}

model Client_API {
  clientId            String
  label               String
  limit               Int
  apiKey              String                @unique
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  createdBy           String                @default("system")
  client              Client                @relation(fields: [clientId], references: [siren], onDelete: Cascade)
  slug                String                @unique
  Client_API_Activity Client_API_Activity[]
  revoked             Boolean               @default(false)
  uuid                String                @default(cuid())

  @@id([clientId, uuid])
}

model Client_API_Activity {
  clientId   String
  uuidApi    String
  pathname   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  createdBy  String     @default("system")
  Client_API Client_API @relation(fields: [clientId, uuidApi], references: [clientId, uuid], onDelete: Cascade)

  @@id([clientId, uuidApi, pathname, createdAt])
}

model UserClient {
  userId          String
  clientId        String
  isBlocked       Boolean
  isBillable      Boolean
  defaultRole     String
  isAdministrator Boolean  @default(false)
  isEditor        Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  isActivated     Boolean  @default(false)
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  client          Client   @relation(fields: [clientId], references: [siren], onDelete: Cascade)

  @@id([userId, clientId])
}

model Invitation {
  email                  String   @unique
  sendEmail              Boolean
  civility               String
  firstname              String
  defaultRole            String?
  lastname               String
  isBlocked              Boolean  @default(false)
  isBillable             Boolean  @default(false)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  createdBy              String
  isEditorProject        Boolean  @default(false)
  isAdministratorProject Boolean  @default(false)
  isValidatorProject     Boolean  @default(false)
  isInternal             Boolean  @default(false)
  clientId               String
  client                 Client   @relation(fields: [clientId], references: [siren], onDelete: Cascade)
  softwareLabel          String
  Software               Software @relation(fields: [softwareLabel, clientId], references: [label, clientId], onDelete: Cascade)
  projectLabel           String?
  projectSoftwareLabel   String?
  isAdministratorClient  Boolean  @default(false)
  isEditorClient         Boolean  @default(false)
  isArchived             Boolean  @default(false)

  @@id([email, clientId])
}

model Project_Invitation {
  projectLabel         String
  projectSoftwareLabel String
  clientId             String
  Project              Project  @relation(fields: [clientId, projectLabel, projectSoftwareLabel], references: [clientId, label, softwareLabel], onDelete: Cascade)
  email                String
  isAdministrator      Boolean  @default(false)
  isEditor             Boolean  @default(false)
  isValidator          Boolean  @default(false)
  createdAt            DateTime @default(now())
  createdBy            String
  updatedAt            DateTime @updatedAt

  @@id([projectLabel, projectSoftwareLabel, clientId, email])
}

model Software {
  label                                      String
  slug                                       String                        @unique
  createdAt                                  DateTime                      @default(now())
  updatedAt                                  DateTime                      @updatedAt
  createdBy                                  String
  clientId                                   String
  client                                     Client                        @relation(fields: [clientId], references: [siren], onDelete: Cascade)
  SoftwareItems                              Software_Items[]
  UserSoftware                               UserSoftware[]
  Software_Setting                           Software_Setting[]
  Project                                    Project[]
  Software_Task                              Software_Task[]
  Software_Absence                           Software_Absence[]
  Software_Constant_Legal                    Software_Constant_Legal[]
  Software_Counter                           Software_Counter[]
  Software_Profile                           Software_Profile[]
  isArchived                                 Boolean                       @default(false)
  Software_Accumulation                      Software_Accumulation[]
  Invitation                                 Invitation[]
  Software_Classification                    Software_Classification[]
  Software_TableSoftware_Table_Seniority_Age Software_Table_Seniority[]
  Software_Table_Age                         Software_Table_Age[]
  Software_Table_Keeping_Wage                Software_Table_Keeping_Wage[]
  Software_Table_Wage                        Software_Table_Wage[]
  Software_Processus                         Software_Processus[]

  @@id([label, clientId])
}

model UserSoftware {
  userId           String
  createdAt        DateTime @default(now())
  isEditor         Boolean  @default(false)
  updatedAt        DateTime @updatedAt
  createdBy        String   @default("system")
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  software         Software @relation(fields: [softwareLabel, softwareClientId], references: [label, clientId], onDelete: Cascade)
  softwareLabel    String
  softwareClientId String
  isActivated      Boolean  @default(false)

  @@id([userId, softwareLabel, softwareClientId])
}

// Tables editor

model Software_Items {
  id                   String // id de l'item standard ou id du logiciel si cr√©ation par l'utilisateur
  idSoftware           String? // id du logiciel
  slug                 String   @unique
  software             Software @relation(fields: [softwareLabel, clientId], references: [label, clientId], onDelete: Cascade)
  softwareLabel        String
  clientId             String
  type                 String
  label                String
  description          String
  idccCode             String
  Idcc                 Idcc?    @relation(fields: [idccCode], references: [code])
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  createdBy            String
  base                 String?
  rate                 String?
  amount               String?
  status               String?
  employeeContribution String?
  employerContribution String?
  dateStart            DateTime
  isArchived           Boolean  @default(false)

  @@id([id, type, softwareLabel, clientId, dateStart])
}

model Software_Setting {
  id            String
  label         String
  description   String?
  value         String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String
  softwareLabel String
  clientId      String
  slug          String   @unique @default(cuid())
  comment       String?
  Software      Software @relation(fields: [softwareLabel, clientId], references: [label, clientId], onDelete: Cascade)

  @@id([id, label, value, clientId, softwareLabel])
}

model Table_Seniority {
  level               String                @default("Standard")
  id                  String
  label               String
  idcc                String
  Idcc                Idcc                  @relation(fields: [idcc], references: [code])
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  createdBy           String                @default("system")
  slug                String                @unique
  Table_Seniority_Row Table_Seniority_Row[]

  @@id([id, idcc])
}

model Client_Table_Seniority {
  level                      String                       @default("client")
  id                         String
  label                      String
  idcc                       String
  clientId                   String
  Client                     Client                       @relation(fields: [clientId], references: [siren])
  Idcc                       Idcc                         @relation(fields: [idcc], references: [code])
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  createdBy                  String                       @default("system")
  slug                       String                       @unique
  Client_Table_Seniority_Row Client_Table_Seniority_Row[]

  @@id([id, idcc, clientId])
}

model Software_Table_Seniority {
  level                        String                         @default("logiciel")
  id                           String
  label                        String
  idcc                         String
  clientId                     String
  softwareLabel                String
  Software                     Software                       @relation(fields: [softwareLabel, clientId], references: [label, clientId])
  Idcc                         Idcc                           @relation(fields: [idcc], references: [code])
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  createdBy                    String                         @default("system")
  slug                         String                         @unique
  Software_Table_Seniority_Row Software_Table_Seniority_Row[]

  @@id([id, idcc, clientId, softwareLabel])
}

model Software_Table_Seniority_Row {
  level                    String                   @default("logiciel")
  id                       String
  label                    String
  tableId                  String
  idcc                     String
  clientId                 String
  softwareLabel            String
  Software_Table_Seniority Software_Table_Seniority @relation(fields: [tableId, clientId, idcc, softwareLabel], references: [id, clientId, idcc, softwareLabel])
  createdAt                DateTime                 @default(now())
  updatedAt                DateTime                 @updatedAt
  createdBy                String                   @default("system")
  slug                     String                   @unique
  minMonth                 Int
  maxMonth                 Int
  pourcentage              Float
  coefficient              String?
  qualification            String?
  niveau                   String?
  echelon                  String?
  indice                   String?

  @@id([id, tableId, idcc, softwareLabel])
}

model Client_Table_Seniority_Row {
  level                  String                 @default("client")
  id                     String
  label                  String
  tableId                String
  idcc                   String
  clientId               String
  Client_Table_Seniority Client_Table_Seniority @relation(fields: [tableId, clientId, idcc], references: [id, clientId, idcc])
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  createdBy              String                 @default("system")
  slug                   String                 @unique
  minMonth               Int
  maxMonth               Int
  pourcentage            Float
  coefficient            String?
  qualification          String?
  niveau                 String?
  echelon                String?
  indice                 String?

  @@id([id, tableId, idcc])
}

model Table_Seniority_Row {
  level           String          @default("Standard")
  order           String
  label           String
  tableId         String
  idcc            String
  Table_Seniority Table_Seniority @relation(fields: [tableId, idcc], references: [id, idcc])
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  createdBy       String          @default("system")
  slug            String          @unique
  minMonth        Int
  maxMonth        Int
  pourcentage     Float
  coefficient     String?
  qualification   String?
  niveau          String?
  echelon         String?
  indice          String?

  @@id([order, tableId, idcc])
}

model Table_Age {
  level         String          @default("Standard")
  id            String
  label         String
  idcc          String
  Idcc          Idcc            @relation(fields: [idcc], references: [code])
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  createdBy     String          @default("system")
  slug          String          @unique
  Table_Age_Row Table_Age_Row[]

  @@id([id, idcc])
}

model Table_Age_Row {
  level       String     @default("Standard")
  id          String
  label       String
  age         Int
  schoolYear  Int
  minMonth    Int
  pourcentage Float
  maxMonth    Int
  idcc        String
  Idcc        Idcc       @relation(fields: [idcc], references: [code])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  createdBy   String     @default("system")
  slug        String     @unique
  Table_Age   Table_Age? @relation(fields: [tableId, idcc], references: [id, idcc])
  tableId     String

  @@id([id, idcc, tableId])
}

model Client_Table_Age {
  level                String                 @default("client")
  id                   String
  label                String
  clientId             String
  Client               Client                 @relation(fields: [clientId], references: [siren])
  idcc                 String
  Idcc                 Idcc                   @relation(fields: [idcc], references: [code])
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  createdBy            String                 @default("system")
  slug                 String                 @unique
  Client_Table_Age_Row Client_Table_Age_Row[]

  @@id([id, idcc, clientId])
}

model Client_Table_Age_Row {
  level            String           @default("client")
  id               String
  label            String
  age              Int
  schoolYear       Int
  minMonth         Int
  maxMonth         Int
  pourcentage      Float
  idcc             String
  clientId         String
  Idcc             Idcc             @relation(fields: [idcc], references: [code])
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  createdBy        String           @default("system")
  slug             String           @unique
  Client_Table_Age Client_Table_Age @relation(fields: [tableId, idcc, clientId], references: [id, idcc, clientId])
  tableId          String

  @@id([id, idcc, tableId, clientId])
}

model Software_Table_Age {
  level                  String                   @default("logiciel")
  id                     String
  softwareLabel          String
  label                  String
  clientId               String
  Software               Software                 @relation(fields: [softwareLabel, clientId], references: [label, clientId])
  idcc                   String
  Idcc                   Idcc                     @relation(fields: [idcc], references: [code])
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  createdBy              String                   @default("system")
  slug                   String                   @unique
  Software_Table_Age_Row Software_Table_Age_Row[]

  @@id([id, idcc, clientId, softwareLabel])
}

model Software_Table_Age_Row {
  level              String              @default("logiciel")
  id                 String
  label              String
  age                Int
  schoolYear         Int
  minMonth           Int
  maxMonth           Int
  idcc               String
  pourcentage        Float
  softwareLabel      String
  clientId           String
  Idcc               Idcc                @relation(fields: [idcc], references: [code])
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  createdBy          String              @default("system")
  slug               String              @unique
  Software_Table_Age Software_Table_Age? @relation(fields: [tableId, idcc, clientId, softwareLabel], references: [id, idcc, clientId, softwareLabel])
  tableId            String

  @@id([id, idcc, tableId, clientId, softwareLabel])
}

model Table_Keeping_Wage {
  level                  String                   @default("Standard")
  id                     String
  label                  String
  idcc                   String
  Idcc                   Idcc                     @relation(fields: [idcc], references: [code])
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  createdBy              String                   @default("system")
  slug                   String                   @unique
  Table_Keeping_Wage_Row Table_Keeping_Wage_Row[]

  @@id([id, idcc])
}

model Table_Keeping_Wage_Row {
  level              String             @default("Standard")
  id                 String
  label              String
  age                Int?
  population         String?
  deficiency         Int
  minMonth           Int
  maxMonth           Int
  pourcentage        Float
  numberOfDay        Int
  idcc               String
  Idcc               Idcc               @relation(fields: [idcc], references: [code])
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  createdBy          String             @default("system")
  slug               String             @unique
  Table_Keeping_Wage Table_Keeping_Wage @relation(fields: [tableId, idcc], references: [id, idcc])
  tableId            String

  @@id([id, idcc, tableId])
}

model Client_Table_Keeping_Wage {
  level                         String                          @default("client")
  id                            String
  label                         String
  clientId                      String
  Client                        Client                          @relation(fields: [clientId], references: [siren])
  idcc                          String
  Idcc                          Idcc                            @relation(fields: [idcc], references: [code])
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @updatedAt
  createdBy                     String                          @default("system")
  slug                          String                          @unique
  Client_Table_Keeping_Wage_Row Client_Table_Keeping_Wage_Row[]

  @@id([id, idcc, clientId])
}

model Client_Table_Keeping_Wage_Row {
  level                     String                    @default("client")
  id                        String
  label                     String
  age                       Int?
  population                String?
  deficiency                Int
  minMonth                  Int
  clientId                  String
  maxMonth                  Int
  pourcentage               Float
  numberOfDay               Int
  idcc                      String
  Idcc                      Idcc                      @relation(fields: [idcc], references: [code])
  createdAt                 DateTime                  @default(now())
  updatedAt                 DateTime                  @updatedAt
  createdBy                 String                    @default("system")
  slug                      String                    @unique
  Client_Table_Keeping_Wage Client_Table_Keeping_Wage @relation(fields: [tableId, idcc, clientId], references: [id, idcc, clientId])
  tableId                   String

  @@id([id, idcc, tableId, clientId])
}

model Software_Table_Keeping_Wage {
  level                           String                            @default("client")
  id                              String
  label                           String
  clientId                        String
  softwareLabel                   String
  Software                        Software                          @relation(fields: [softwareLabel, clientId], references: [label, clientId])
  idcc                            String
  Idcc                            Idcc                              @relation(fields: [idcc], references: [code])
  createdAt                       DateTime                          @default(now())
  updatedAt                       DateTime                          @updatedAt
  createdBy                       String                            @default("system")
  slug                            String                            @unique
  Software_Table_Keeping_Wage_Row Software_Table_Keeping_Wage_Row[]

  @@id([id, idcc, clientId, softwareLabel])
}

model Software_Table_Keeping_Wage_Row {
  level                       String                      @default("client")
  id                          String
  label                       String
  age                         Int?
  population                  String?
  deficiency                  Int
  minMonth                    Int
  clientId                    String
  maxMonth                    Int
  pourcentage                 Float
  numberOfDay                 Int
  sofwateLabel                String
  idcc                        String
  Idcc                        Idcc                        @relation(fields: [idcc], references: [code])
  createdAt                   DateTime                    @default(now())
  updatedAt                   DateTime                    @updatedAt
  createdBy                   String                      @default("system")
  slug                        String                      @unique
  Software_Table_Keeping_Wage Software_Table_Keeping_Wage @relation(fields: [tableId, idcc, clientId, sofwateLabel], references: [id, idcc, clientId, softwareLabel])
  tableId                     String

  @@id([id, idcc, tableId, clientId, sofwateLabel])
}

model Table_Wage {
  level          String           @default("Standard")
  id             String
  label          String
  idcc           String
  Idcc           Idcc             @relation(fields: [idcc], references: [code])
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  createdBy      String           @default("system")
  slug           String           @unique
  Table_Wage_Row Table_Wage_Row[]

  @@id([id, idcc])
}

model Table_Wage_Row {
  level      String     @default("Standard")
  id         String
  label      String
  age        Int?
  population String?
  minMonth   Int
  maxMonth   Int
  value      String
  idcc       String
  Idcc       Idcc       @relation(fields: [idcc], references: [code])
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  createdBy  String     @default("system")
  slug       String     @unique
  Table_Wage Table_Wage @relation(fields: [tableId, idcc], references: [id, idcc])
  tableId    String

  @@id([id, idcc, tableId])
}

model Client_Table_Wage {
  level                 String                  @default("client")
  id                    String
  label                 String
  clientId              String
  Client                Client                  @relation(fields: [clientId], references: [siren])
  idcc                  String
  Idcc                  Idcc                    @relation(fields: [idcc], references: [code])
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  createdBy             String                  @default("system")
  slug                  String                  @unique
  Client_Table_Wage_Row Client_Table_Wage_Row[]

  @@id([id, idcc, clientId])
}

model Client_Table_Wage_Row {
  level             String            @default("client")
  id                String
  label             String
  age               Int?
  population        String?
  minMonth          Int
  clientId          String
  maxMonth          Int
  value             String
  idcc              String
  Idcc              Idcc              @relation(fields: [idcc], references: [code])
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  createdBy         String            @default("system")
  slug              String            @unique
  Client_Table_Wage Client_Table_Wage @relation(fields: [tableId, idcc, clientId], references: [id, idcc, clientId])
  tableId           String

  @@id([id, idcc, tableId, clientId])
}

model Software_Table_Wage {
  level                   String                    @default("logiciel")
  id                      String
  clientId                String
  label                   String
  softwareLabel           String
  Software                Software                  @relation(fields: [clientId, softwareLabel], references: [clientId, label])
  idcc                    String
  Idcc                    Idcc                      @relation(fields: [idcc], references: [code])
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  createdBy               String                    @default("system")
  slug                    String                    @unique
  Software_Table_Wage_Row Software_Table_Wage_Row[]

  @@id([id, idcc, clientId, softwareLabel])
}

model Software_Table_Wage_Row {
  level               String              @default("logiciel")
  id                  String
  label               String
  age                 Int?
  population          String?
  minMonth            Int
  clientId            String
  tableId             String
  softwareLabel       String
  maxMonth            Int
  value               String
  idcc                String
  Idcc                Idcc                @relation(fields: [idcc], references: [code])
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  createdBy           String              @default("system")
  slug                String              @unique
  Software_Table_Wage Software_Table_Wage @relation(fields: [tableId, idcc, clientId, softwareLabel], references: [id, idcc, clientId, softwareLabel])

  @@id([id, idcc, tableId, clientId, softwareLabel])
}

// Tables projects

model UserProject {
  userId               String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  createdBy            String
  isAdmin              Boolean  @default(false)
  isEditor             Boolean  @default(false)
  isValidator          Boolean  @default(false)
  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  project              Project  @relation(fields: [projectClientId, projectLabel, projectSoftwareLabel], references: [clientId, label, softwareLabel], onDelete: Cascade)
  projectClientId      String
  projectSoftwareLabel String
  projectLabel         String
  team                 String
  role                 String?
  isBlocked            Boolean  @default(false)

  @@id([userId, projectClientId, projectLabel, projectSoftwareLabel])
}

model Project {
  clientId              String
  client                Client                  @relation(fields: [clientId], references: [siren], onDelete: Cascade)
  logo                  String?
  label                 String
  description           String
  status                String                  @default("actif")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  createdBy             String
  Software              Software                @relation(fields: [softwareLabel, clientId], references: [label, clientId], onDelete: Cascade)
  softwareLabel         String
  UserProject           UserProject[]
  Logger                Logger[]
  slug                  String                  @unique
  Project_Constant      Project_Constant[]
  Project_Invitation    Project_Invitation[]
  Project_Society       Project_Society[]
  Project_Job           Project_Job[]
  Project_DSN           Project_DSN[]
  Project_Approve       Project_Approve[]
  Project_Absence       Project_Absence[]
  Project_Payrool_Item  Project_Payrool_Item[]
  Project_Service       Project_Service[]
  Project_Idcc          Project_Idcc[]
  Project_Processus     Project_Processus[]
  Project_Bank          Project_Bank[]
  Project_Rate_AT       Project_Rate_AT[]
  Project_Rate_Mobility Project_Rate_Mobility[]
  Project_Contribution  Project_Contribution[]
  Project_Salary        Project_Salary[]

  @@id([clientId, softwareLabel, label])
}

model Project_Society {
  slug                         String                         @unique
  id                           String                         @default("En attente")
  siren                        String
  ape                          String
  socialReason                 String                         @default("En attente")
  address1                     String
  address2                     String?                        @default("")
  address3                     String?                        @default("")
  address4                     String?                        @default("")
  status                       String                         @default("En cours")
  source                       String                         @default("analyse")
  postalCode                   String
  city                         String
  isApproved                   Boolean                        @default(false)
  isPending                    Boolean                        @default(false)
  isOpen                       Boolean                        @default(true)
  clientId                     String
  country                      String                         @default("France")
  softwareLabel                String
  description                  String?
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  createdBy                    String                         @default("system")
  project                      Project                        @relation(fields: [clientId, softwareLabel, projectLabel], references: [clientId, softwareLabel, label])
  projectLabel                 String
  Project_Establishment        Project_Establishment[]
  Project_Payrool_Item         Project_Payrool_Item[]
  Project_Society_Archived     Project_Society_Archived[]
  Project_Society_Job          Project_Society_Job[]
  Project_Society_Free_Zone    Project_Society_Free_Zone[]
  Project_Society_Absence      Project_Society_Absence[]
  Project_Society_Salary       Project_Society_Salary[]
  Project_Society_Contribution Project_Society_Contribution[]

  @@id([clientId, softwareLabel, projectLabel, siren])
}

model Project_Society_Archived {
  slug            String          @unique @default(cuid())
  id              String
  siren           String
  ape             String
  socialReason    String
  address1        String
  address2        String?
  address3        String?
  address4        String?
  status          String
  source          String
  postalCode      String
  city            String
  clientId        String
  version         Int
  country         String
  softwareLabel   String
  description     String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  createdBy       String
  projectLabel    String
  Project_Society Project_Society @relation(fields: [clientId, softwareLabel, projectLabel, siren], references: [clientId, softwareLabel, projectLabel, siren], onDelete: Cascade)

  @@id([clientId, softwareLabel, projectLabel, siren, version])
}

model Project_Payrool_Item {
  id                             String
  label                          String
  type                           String
  description                    String
  population                     String?
  idcc                           String?
  example1                       String?
  example2                       String?
  example3                       String?
  example4                       String?
  example5                       String?
  clientId                       String
  isApproved                     Boolean          @default(false)
  isPending                      Boolean          @default(false)
  isOpen                         Boolean          @default(true)
  societyId                      String
  Project_Society                Project_Society? @relation(fields: [projectLabel, softwareLabel, clientId, societyId], references: [projectLabel, softwareLabel, clientId, siren])
  softwareLabel                  String
  base                           String?
  baseDetail                     String?
  rate                           String?
  rateDetail                     String?
  coefficient                    String?
  coefficientDetail              String?
  amount                         String?
  amountDetail                   String?
  contributionBase               String?
  contributionBaseDetail         String?
  contributionRateEmployee       String?
  contributionRateEmployeeDetail String?
  contributionRateEmployerDetail String?
  contributionRateEmployer       String?
  projectLabel                   String
  Project                        Project          @relation(fields: [clientId, softwareLabel, projectLabel], references: [clientId, label, softwareLabel])
  createdAt                      DateTime         @default(now())
  updatedAt                      DateTime         @updatedAt
  createdBy                      String           @default("system")

  @@id([id, clientId, softwareLabel, projectLabel])
}

model Project_Absence {
  id                       String
  label                    String
  dsnId                    String?
  method                   String
  isApproved               Boolean                    @default(false)
  isPending                Boolean                    @default(false)
  isOpen                   Boolean                    @default(true)
  population               String?
  description              String?
  clientId                 String
  slug                     String                     @unique
  status                   String                     @default("En cours")
  projectLabel             String
  isSocialSecurity         Boolean                    @default(false)
  softwareLabel            String
  Project                  Project                    @relation(fields: [clientId, softwareLabel, projectLabel], references: [clientId, label, softwareLabel])
  source                   String                     @default("analyse")
  updatedAt                DateTime                   @updatedAt
  createdAt                DateTime                   @default(now())
  createdBy                String                     @default("system")
  Project_Absence_Archived Project_Absence_Archived[]
  Project_Society_Absence  Project_Society_Absence[]

  @@id([id, clientId, softwareLabel, projectLabel])
}

model Project_Society_Absence {
  clientId        String
  softwareLabel   String
  projectLabel    String
  societyId       String
  absenceId       String
  isApproved      Boolean         @default(false)
  isPending       Boolean         @default(false)
  isOpen          Boolean         @default(true)
  createdAt       DateTime        @default(now())
  createdBy       String
  updateAt        DateTime        @updatedAt
  Project_Society Project_Society @relation(fields: [clientId, softwareLabel, projectLabel, societyId], references: [clientId, softwareLabel, projectLabel, siren], map: "Society")
  Project_Absence Project_Absence @relation(fields: [clientId, softwareLabel, projectLabel, absenceId], references: [clientId, softwareLabel, projectLabel, id], map: "Absence")

  @@id([clientId, softwareLabel, projectLabel, societyId, absenceId])
}

model Project_Absence_Archived {
  slug             String          @unique @default(cuid())
  id               String
  label            String
  dsnId            String?
  method           String
  isApproved       Boolean         @default(false)
  isPending        Boolean         @default(false)
  isOpen           Boolean         @default(true)
  population       String?
  description      String?
  clientId         String
  status           String
  projectLabel     String
  isSocialSecurity Boolean         @default(false)
  softwareLabel    String
  source           String          @default("analyse")
  updatedAt        DateTime        @updatedAt
  createdAt        DateTime        @default(now())
  createdBy        String          @default("system")
  version          Int
  Project_Absence  Project_Absence @relation(fields: [clientId, softwareLabel, projectLabel, id], references: [clientId, softwareLabel, projectLabel, id])

  @@id([id, clientId, softwareLabel, projectLabel, version])
}

model Project_Establishment {
  slug                                String                                @unique
  id                                  String                                @default("En attente")
  nic                                 String
  ape                                 String
  legalStatus                         String
  isApproved                          Boolean                               @default(false)
  isPending                           Boolean                               @default(false)
  isOpen                              Boolean                               @default(true)
  address1                            String
  socialReason                        String                                @default("En attente")
  address2                            String?                               @default("")
  address3                            String?                               @default("")
  address4                            String?                               @default("")
  postalCode                          String
  status                              String                                @default("En cours")
  source                              String                                @default("analyse")
  city                                String
  clientId                            String
  softwareLabel                       String
  country                             String                                @default("France")
  description                         String?                               @default("")
  createdAt                           DateTime                              @default(now())
  updatedAt                           DateTime                              @updatedAt
  createdBy                           String                                @default("system")
  projectLabel                        String
  societyId                           String
  Project_Society                     Project_Society                       @relation(fields: [clientId, softwareLabel, societyId, projectLabel], references: [clientId, softwareLabel, siren, projectLabel], onDelete: Cascade)
  Project_Establishment_Idcc          Project_Establishment_Idcc[]
  Project_Establishment_Archived      Project_Establishment_Archived[]
  Project_Establishement_Rate_AT      Project_Establishement_Rate_AT[]
  Project_Establishment_Paid_Leave    Project_Establishment_Paid_Leave[]
  Project_Establishment_URSSAF        Project_Establishment_URSSAF[]
  Project_Establishment_AGIRC_ARRCO   Project_Establishment_AGIRC_ARRCO[]
  Project_Establishment_Prevoyance    Project_Establishment_Prevoyance[]
  Project_Establishment_Mutuelle      Project_Establishment_Mutuelle[]
  Project_Establishment_Rate_Mobility Project_Establishment_Rate_Mobility[]
  Project_Establishment_Service       Project_Establishment_Service[]
  Project_Establishment_Bank          Project_Establishment_Bank[]

  @@id([clientId, softwareLabel, societyId, projectLabel, nic])
}

model Project_Establishment_Archived {
  slug                  String                @unique @default(cuid())
  id                    String
  nic                   String
  ape                   String
  legalStatus           String
  address1              String
  socialReason          String
  address2              String?
  address3              String?
  address4              String?
  postalCode            String
  status                String
  source                String
  city                  String
  clientId              String
  softwareLabel         String
  country               String
  description           String?
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  createdBy             String
  projectLabel          String
  societyId             String
  version               Int
  Project_Establishment Project_Establishment @relation(fields: [clientId, softwareLabel, societyId, projectLabel, nic], references: [clientId, softwareLabel, societyId, projectLabel, nic])

  @@id([clientId, softwareLabel, societyId, projectLabel, nic, version])
}

model Project_Establishment_Idcc {
  clientId              String
  softwareLabel         String
  isApproved            Boolean               @default(false)
  isPending             Boolean               @default(false)
  isOpen                Boolean               @default(true)
  source                String                @default("analyse")
  projectLabel          String
  societyId             String
  establishmentNic      String
  isStandby             Boolean               @default(false)
  idcc                  String
  Project_Idcc          Project_Idcc          @relation(fields: [idcc, clientId, softwareLabel, projectLabel], references: [idcc, clientId, softwareLabel, projectLabel])
  Project_Establishment Project_Establishment @relation(fields: [establishmentNic, clientId, softwareLabel, projectLabel, societyId], references: [nic, clientId, softwareLabel, projectLabel, societyId])

  @@id([idcc, clientId, softwareLabel, projectLabel, societyId, establishmentNic])
}

model Project_Establishement_Rate_AT {
  clientId              String
  projectLabel          String
  softwareLabel         String
  societyId             String
  establishmentNic      String
  idRateAt              String
  updatedAt             DateTime              @updatedAt
  createdAt             DateTime              @default(now())
  createdBy             String                @default("system")
  Project_Establishment Project_Establishment @relation(fields: [establishmentNic, clientId, softwareLabel, projectLabel, societyId], references: [nic, clientId, softwareLabel, projectLabel, societyId])
  Project_Rate_AT       Project_Rate_AT       @relation(fields: [clientId, softwareLabel, projectLabel, idRateAt], references: [clientId, softwareLabel, projectLabel, id])

  @@id([clientId, softwareLabel, projectLabel, societyId, establishmentNic, idRateAt])
}

model Project_Free_Zone {
  clientId                   String
  projectLabel               String
  softwareLabel              String
  id                         String
  type                       String
  isApproved                 Boolean                      @default(false)
  isPending                  Boolean                      @default(false)
  isOpen                     Boolean                      @default(true)
  status                     String                       @default("En cours")
  label                      String
  slug                       String                       @unique
  description                String?
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  createdBy                  String                       @default("system")
  Project_Society_Free_Zone  Project_Society_Free_Zone[]
  Project_Free_Zone_Archived Project_Free_Zone_Archived[]

  @@id([id, clientId, softwareLabel, projectLabel])
}

model Project_Free_Zone_Archived {
  slug              String            @unique @default(cuid())
  id                String
  type              String
  label             String
  clientId          String
  status            String
  softwareLabel     String
  description       String?
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  createdBy         String
  projectLabel      String
  version           Int
  Project_Free_Zone Project_Free_Zone @relation(fields: [id, clientId, softwareLabel, projectLabel], references: [id, clientId, softwareLabel, projectLabel])

  @@id([id, type, clientId, softwareLabel, projectLabel, version])
}

model Project_Society_Free_Zone {
  clientId          String
  projectLabel      String
  softwareLabel     String
  societyId         String
  isApproved        Boolean           @default(false)
  isPending         Boolean           @default(false)
  isOpen            Boolean           @default(true)
  status            String            @default("En cours")
  zoneId            String
  slug              String            @unique
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  createdBy         String            @default("system")
  Project_Society   Project_Society   @relation(fields: [clientId, softwareLabel, projectLabel, societyId], references: [clientId, softwareLabel, projectLabel, siren])
  Project_Free_Zone Project_Free_Zone @relation(fields: [zoneId, clientId, softwareLabel, projectLabel], references: [id, clientId, softwareLabel, projectLabel])

  @@id([zoneId, clientId, softwareLabel, projectLabel, societyId])
}

model Project_Rate_AT {
  id                             String
  clientId                       String
  source                         String                           @default("analyse")
  label                          String
  status                         String                           @default("En cours")
  projectLabel                   String
  isOpen                         Boolean                          @default(true)
  isPending                      Boolean                          @default(false)
  softwareLabel                  String
  startDate                      DateTime?
  endDate                        DateTime?
  isStandby                      Boolean                          @default(false)
  rate                           String
  slug                           String                           @unique
  order                          Int?
  office                         Boolean                          @default(false)
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime                         @updatedAt
  createdBy                      String                           @default("system")
  Project_Establishement_Rate_AT Project_Establishement_Rate_AT[]
  Project                        Project?                         @relation(fields: [projectClientId, projectSoftwareLabel, projectLabel], references: [clientId, softwareLabel, label])
  projectClientId                String?
  projectSoftwareLabel           String?

  @@id([id, clientId, softwareLabel, projectLabel])
}

model Project_Rate_Mobility {
  clientId                            String
  projectLabel                        String
  softwareLabel                       String
  city                                String
  startDate                           String
  idInsee                             String
  rate                                String
  updatedAt                           DateTime                              @updatedAt
  createdAt                           DateTime                              @default(now())
  createdBy                           String                                @default("system")
  Project_Establishment_Rate_Mobility Project_Establishment_Rate_Mobility[]
  Project                             Project?                              @relation(fields: [projectClientId, projectSoftwareLabel, projectLabel], references: [clientId, softwareLabel, label])
  projectClientId                     String?
  projectSoftwareLabel                String?

  @@id([clientId, softwareLabel, projectLabel, idInsee])
}

model Project_Establishment_Rate_Mobility {
  clientId              String
  projectLabel          String
  softwareLabel         String
  societyId             String
  establishmentNic      String
  idInsee               String
  Project_Establishment Project_Establishment @relation(fields: [establishmentNic, clientId, softwareLabel, projectLabel, societyId], references: [nic, clientId, softwareLabel, projectLabel, societyId])
  Project_Rate_Mobility Project_Rate_Mobility @relation(fields: [clientId, softwareLabel, projectLabel, idInsee], references: [clientId, softwareLabel, projectLabel, idInsee])

  @@id([clientId, softwareLabel, projectLabel, societyId, establishmentNic, idInsee])
}

model Project_Idcc {
  idcc                       String
  label                      String
  clientId                   String
  isApproved                 Boolean                      @default(false)
  isPending                  Boolean                      @default(false)
  isOpen                     Boolean                      @default(true)
  slug                       String                       @unique
  softwareLabel              String
  status                     String                       @default("En cours")
  source                     String                       @default("analyse")
  projectLabel               String
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  createdBy                  String                       @default("system")
  Project                    Project                      @relation(fields: [clientId, softwareLabel, projectLabel], references: [clientId, label, softwareLabel])
  Project_Establishment_Idcc Project_Establishment_Idcc[]
  Project_Coefficient        Project_Coefficient[]
  Project_Qualification      Project_Qualification[]
  Project_Niveau             Project_Niveau[]
  Project_Echelon            Project_Echelon[]
  Project_Indice             Project_Indice[]

  @@id([idcc, clientId, softwareLabel, projectLabel])
}

model Project_Coefficient {
  level         String       @default("Logiciel")
  id            String
  projectLabel  String
  isApproved    Boolean      @default(false)
  isPending     Boolean      @default(false)
  isOpen        Boolean      @default(true)
  slug          String       @unique
  label         String
  status        String       @default("En cours")
  source        String       @default("analyse")
  description   String?
  idcc          String
  clientId      String
  softwareLabel String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  createdBy     String       @default("system")
  Project_Idcc  Project_Idcc @relation(fields: [idcc, clientId, softwareLabel, projectLabel], references: [idcc, clientId, softwareLabel, projectLabel])

  @@id([id, idcc, projectLabel, clientId, softwareLabel])
}

model Project_Bank {
  clientId                   String
  projectLabel               String
  softwareLabel              String
  id                         String
  isApproved                 Boolean                      @default(false)
  isPending                  Boolean                      @default(false)
  isOpen                     Boolean                      @default(true)
  status                     String                       @default("En cours")
  slug                       String                       @unique
  label                      String
  iban                       String
  bic                        String
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  createdBy                  String                       @default("system")
  Project                    Project                      @relation(fields: [clientId, projectLabel, softwareLabel], references: [clientId, label, softwareLabel])
  Project_Establishment_Bank Project_Establishment_Bank[]
  Project_Bank_Archived      Project_Bank_Archived[]

  @@id([clientId, softwareLabel, projectLabel, iban])
}

model Project_Bank_Archived {
  clientId      String
  projectLabel  String
  softwareLabel String
  id            String
  status        String
  slug          String       @unique @default(cuid())
  label         String
  iban          String
  bic           String
  version       Int
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  createdBy     String       @default("system")
  Project_Bank  Project_Bank @relation(fields: [clientId, projectLabel, softwareLabel, iban], references: [clientId, projectLabel, softwareLabel, iban])

  @@id([clientId, softwareLabel, projectLabel, iban, version])
}

model Project_Establishment_Bank {
  clientId              String
  projectLabel          String
  isApproved            Boolean               @default(false)
  isPending             Boolean               @default(false)
  isOpen                Boolean               @default(true)
  softwareLabel         String
  societyId             String
  status                String                @default("En cours")
  establishmentNic      String
  slug                  String                @unique
  iban                  String
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  createdBy             String                @default("system")
  salary                Boolean               @default(false)
  contribution          Boolean               @default(false)
  deposit               Boolean               @default(false)
  expsense              Boolean               @default(false)
  Project_Bank          Project_Bank          @relation(fields: [clientId, softwareLabel, projectLabel, iban], references: [clientId, softwareLabel, projectLabel, iban])
  Project_Establishment Project_Establishment @relation(fields: [establishmentNic, clientId, softwareLabel, projectLabel, societyId], references: [nic, clientId, softwareLabel, projectLabel, societyId])

  @@id([clientId, softwareLabel, projectLabel, societyId, establishmentNic, iban])
}

model Project_Qualification {
  level         String       @default("Logiciel")
  id            String
  projectLabel  String
  isApproved    Boolean      @default(false)
  isPending     Boolean      @default(false)
  isOpen        Boolean      @default(true)
  slug          String       @unique
  label         String
  status        String       @default("En cours")
  source        String       @default("analyse")
  description   String?
  idcc          String
  clientId      String
  softwareLabel String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  createdBy     String       @default("system")
  Project_Idcc  Project_Idcc @relation(fields: [idcc, clientId, softwareLabel, projectLabel], references: [idcc, clientId, softwareLabel, projectLabel])

  @@id([id, idcc, projectLabel, clientId, softwareLabel])
}

model Project_Niveau {
  level         String       @default("Logiciel")
  id            String
  isApproved    Boolean      @default(false)
  isPending     Boolean      @default(false)
  isOpen        Boolean      @default(true)
  projectLabel  String
  slug          String       @unique
  label         String
  status        String       @default("En cours")
  source        String       @default("analyse")
  description   String?
  idcc          String
  clientId      String
  softwareLabel String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  createdBy     String       @default("system")
  Project_Idcc  Project_Idcc @relation(fields: [idcc, clientId, softwareLabel, projectLabel], references: [idcc, clientId, softwareLabel, projectLabel])

  @@id([id, idcc, projectLabel, clientId, softwareLabel])
}

model Project_Indice {
  level         String       @default("Logiciel")
  id            String
  projectLabel  String
  isApproved    Boolean      @default(false)
  isPending     Boolean      @default(false)
  isOpen        Boolean      @default(true)
  slug          String       @unique
  label         String
  status        String       @default("En cours")
  source        String       @default("analyse")
  description   String?
  idcc          String
  clientId      String
  softwareLabel String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  createdBy     String       @default("system")
  Project_Idcc  Project_Idcc @relation(fields: [idcc, clientId, softwareLabel, projectLabel], references: [idcc, clientId, softwareLabel, projectLabel])

  @@id([id, idcc, projectLabel, clientId, softwareLabel])
}

model Project_Echelon {
  level         String       @default("Logiciel")
  id            String
  projectLabel  String
  isApproved    Boolean      @default(false)
  isPending     Boolean      @default(false)
  isOpen        Boolean      @default(true)
  slug          String       @unique
  label         String
  status        String       @default("En cours")
  source        String       @default("analyse")
  description   String?
  idcc          String
  clientId      String
  softwareLabel String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  createdBy     String       @default("system")
  Project_Idcc  Project_Idcc @relation(fields: [idcc, clientId, softwareLabel, projectLabel], references: [idcc, clientId, softwareLabel, projectLabel])

  @@id([id, idcc, projectLabel, clientId, softwareLabel])
}

model Project_Establishment_Paid_Leave {
  clientId              String
  projectLabel          String
  softwareLabel         String
  isApproved            Boolean               @default(false)
  isPending             Boolean               @default(false)
  isOpen                Boolean               @default(true)
  establishmentNic      String
  idPaidLeave           String
  societyId             String
  Project_Establishment Project_Establishment @relation(fields: [establishmentNic, clientId, softwareLabel, projectLabel, societyId], references: [nic, clientId, softwareLabel, projectLabel, societyId])
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  createdBy             String                @default("system")
  Project_Paid_Leave    Project_Paid_Leave    @relation(fields: [idPaidLeave, clientId, softwareLabel, projectLabel], references: [id, clientId, softwareLabel, projectLabel])

  @@id([idPaidLeave, clientId, softwareLabel, projectLabel, establishmentNic, societyId])
}

model Project_Paid_Leave {
  id                               String
  slug                             String                             @unique
  clientId                         String
  isApproved                       Boolean                            @default(false)
  isPending                        Boolean                            @default(false)
  isOpen                           Boolean                            @default(true)
  label                            String
  softwareLabel                    String
  status                           String                             @default("En cours")
  source                           String                             @default("analyse")
  projectLabel                     String
  periodEndDate                    String
  method                           String
  valuationLeave                   String
  roudingMethod                    String
  roudingMethodLeave               String
  valuation                        String
  tableSeniority                   String?
  createdAt                        DateTime                           @default(now())
  updatedAt                        DateTime                           @updatedAt
  createdBy                        String
  Project_Establishment_Paid_Leave Project_Establishment_Paid_Leave[]

  @@id([id, clientId, softwareLabel, projectLabel])
}

model Project_Society_Job {
  clientId        String
  projectLabel    String
  softwareLabel   String
  isApproved      Boolean         @default(false)
  isPending       Boolean         @default(false)
  isOpen          Boolean         @default(true)
  societyId       String
  Project_Society Project_Society @relation(fields: [clientId, softwareLabel, projectLabel, societyId], references: [clientId, softwareLabel, projectLabel, siren])
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  createdBy       String          @default("system")
  jobId           String
  Project_Job     Project_Job     @relation(fields: [clientId, softwareLabel, projectLabel, jobId], references: [clientId, softwareLabel, projectLabel, id])

  @@id([clientId, softwareLabel, projectLabel, societyId, jobId])
}

model Project_Job {
  slug                 String                 @unique
  id                   String                 @default("En attente")
  label                String
  isApproved           Boolean                @default(false)
  isPending            Boolean                @default(false)
  isOpen               Boolean                @default(true)
  description          String?
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  createdBy            String                 @default("system")
  clientId             String
  status               String                 @default("En cours")
  source               String                 @default("analyse")
  projectLabel         String
  softwareLabel        String
  Project              Project                @relation(fields: [clientId, projectLabel, softwareLabel], references: [clientId, label, softwareLabel])
  Project_Society_Job  Project_Society_Job[]
  Project_Job_Archived Project_Job_Archived[]

  @@id([clientId, softwareLabel, projectLabel, id])
}

model Project_Job_Archived {
  slug          String      @unique @default(cuid())
  id            String
  label         String
  description   String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  createdBy     String      @default("system")
  clientId      String
  status        String
  source        String
  projectLabel  String
  softwareLabel String
  version       Int
  Project_Job   Project_Job @relation(fields: [clientId, projectLabel, softwareLabel, id], references: [clientId, projectLabel, softwareLabel, id])

  @@id([clientId, softwareLabel, projectLabel, id, version])
}

model Project_Establishment_URSSAF {
  clientId              String
  projectLabel          String
  softwareLabel         String
  isApproved            Boolean               @default(false)
  isPending             Boolean               @default(false)
  isOpen                Boolean               @default(true)
  establishmentNic      String
  URSSAFId              String
  societyId             String
  Project_Establishment Project_Establishment @relation(fields: [establishmentNic, clientId, softwareLabel, projectLabel, societyId], references: [nic, clientId, softwareLabel, projectLabel, societyId])
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  createdBy             String                @default("system")
  Project_URSSAF        Project_URSSAF        @relation(fields: [URSSAFId, clientId, softwareLabel, projectLabel], references: [id, clientId, softwareLabel, projectLabel])

  @@id([URSSAFId, clientId, softwareLabel, projectLabel, establishmentNic, societyId])
}

model Project_URSSAF {
  slug                         String                         @unique
  id                           String
  clientId                     String
  projectLabel                 String
  isApproved                   Boolean                        @default(false)
  isPending                    Boolean                        @default(false)
  isOpen                       Boolean                        @default(true)
  softwareLabel                String
  source                       String                         @default("analyse")
  label                        String
  status                       String                         @default("En cours")
  address1                     String
  address2                     String?                        @default("")
  address3                     String?                        @default("")
  address4                     String?                        @default("")
  postalCode                   String
  city                         String
  country                      String
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  createdBy                    String
  Project_Establishment_URSSAF Project_Establishment_URSSAF[]

  @@id([id, clientId, softwareLabel, projectLabel])
}

model Project_URSSAF_Archived {
  slug          String   @unique @default(cuid())
  id            String
  clientId      String
  projectLabel  String
  isApproved    Boolean  @default(false)
  isPending     Boolean  @default(false)
  isOpen        Boolean  @default(true)
  softwareLabel String
  source        String
  label         String
  status        String
  address1      String
  address2      String?
  address3      String?
  address4      String?
  postalCode    String
  city          String
  country       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String
  version       Int

  @@id([id, clientId, softwareLabel, projectLabel, version])
}

model Project_Establishment_AGIRC_ARRCO {
  clientId                           String
  projectLabel                       String
  softwareLabel                      String
  isApproved                         Boolean                @default(false)
  isPending                          Boolean                @default(false)
  isOpen                             Boolean                @default(true)
  establishmentNic                   String
  AGIRC_ARRCOId                      String
  createdAt                          DateTime               @default(now())
  updatedAt                          DateTime               @updatedAt
  createdBy                          String                 @default("system")
  Project_AGIRC_ARRCO                Project_AGIRC_ARRCO    @relation(fields: [AGIRC_ARRCOId, clientId, softwareLabel, projectLabel], references: [id, clientId, softwareLabel, projectLabel])
  Project_Establishment              Project_Establishment? @relation(fields: [project_EstablishmentClientId, project_EstablishmentSoftwareLabel, project_EstablishmentSocietyId, project_EstablishmentProjectLabel, project_EstablishmentNic], references: [clientId, softwareLabel, societyId, projectLabel, nic])
  project_EstablishmentClientId      String?
  project_EstablishmentSoftwareLabel String?
  project_EstablishmentSocietyId     String?
  project_EstablishmentProjectLabel  String?
  project_EstablishmentNic           String?

  @@id([AGIRC_ARRCOId, clientId, softwareLabel, projectLabel])
}

model Project_AGIRC_ARRCO {
  slug                              String                              @unique
  id                                String
  clientId                          String
  projectLabel                      String
  isApproved                        Boolean                             @default(false)
  isPending                         Boolean                             @default(false)
  isOpen                            Boolean                             @default(true)
  softwareLabel                     String
  source                            String                              @default("analyse")
  label                             String
  status                            String                              @default("En cours")
  address1                          String
  address2                          String?                             @default("")
  address3                          String?                             @default("")
  address4                          String?                             @default("")
  postalCode                        String
  city                              String
  country                           String
  createdAt                         DateTime                            @default(now())
  updatedAt                         DateTime                            @updatedAt
  createdBy                         String
  Project_Establishment_AGIRC_ARRCO Project_Establishment_AGIRC_ARRCO[]
  Project_AGIRC_ARRCO_Archived      Project_AGIRC_ARRCO_Archived[]

  @@id([id, clientId, softwareLabel, projectLabel])
}

model Project_AGIRC_ARRCO_Archived {
  slug                String              @unique @default(cuid())
  id                  String
  clientId            String
  isApproved          Boolean             @default(false)
  isPending           Boolean             @default(false)
  isOpen              Boolean             @default(true)
  projectLabel        String
  softwareLabel       String
  source              String
  label               String
  status              String
  address1            String
  address2            String?
  address3            String?
  address4            String?
  postalCode          String
  city                String
  version             Int
  country             String
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  createdBy           String
  Project_AGIRC_ARRCO Project_AGIRC_ARRCO @relation(fields: [id, clientId, softwareLabel, projectLabel], references: [id, clientId, softwareLabel, projectLabel])

  @@id([id, clientId, softwareLabel, projectLabel, version])
}

model Project_Establishment_Prevoyance {
  clientId              String
  projectLabel          String
  softwareLabel         String
  establishmentNic      String
  isApproved            Boolean               @default(false)
  isPending             Boolean               @default(false)
  isOpen                Boolean               @default(true)
  prevoyanceId          String
  societyId             String
  Project_Establishment Project_Establishment @relation(fields: [establishmentNic, clientId, softwareLabel, projectLabel, societyId], references: [nic, clientId, softwareLabel, projectLabel, societyId])
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  createdBy             String                @default("system")
  Project_Prevoyance    Project_Prevoyance    @relation(fields: [prevoyanceId, clientId, softwareLabel, projectLabel], references: [id, clientId, softwareLabel, projectLabel])

  @@id([prevoyanceId, clientId, softwareLabel, projectLabel, establishmentNic, societyId])
}

model Project_Prevoyance {
  slug                             String                             @unique
  id                               String
  clientId                         String
  projectLabel                     String
  isApproved                       Boolean                            @default(false)
  isPending                        Boolean                            @default(false)
  isOpen                           Boolean                            @default(true)
  softwareLabel                    String
  source                           String                             @default("analyse")
  label                            String
  status                           String                             @default("En cours")
  address1                         String
  address2                         String?                            @default("")
  address3                         String?                            @default("")
  address4                         String?                            @default("")
  postalCode                       String
  city                             String
  country                          String
  createdAt                        DateTime                           @default(now())
  updatedAt                        DateTime                           @updatedAt
  createdBy                        String
  Project_Establishment_Prevoyance Project_Establishment_Prevoyance[]

  @@id([id, clientId, softwareLabel, projectLabel])
}

model Project_Prevoyance_Archived {
  slug          String   @unique @default(cuid())
  id            String
  clientId      String
  projectLabel  String
  softwareLabel String
  source        String   @default("analyse")
  label         String
  status        String
  address1      String
  address2      String?
  address3      String?
  address4      String?
  postalCode    String
  city          String
  country       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String
  version       Int

  @@id([id, clientId, softwareLabel, projectLabel, version])
}

model Project_Establishment_Mutuelle {
  clientId              String
  projectLabel          String
  softwareLabel         String
  establishmentNic      String
  isApproved            Boolean               @default(false)
  isPending             Boolean               @default(false)
  isOpen                Boolean               @default(true)
  mutuelleId            String
  societyId             String
  Project_Establishment Project_Establishment @relation(fields: [establishmentNic, clientId, softwareLabel, projectLabel, societyId], references: [nic, clientId, softwareLabel, projectLabel, societyId])
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  createdBy             String                @default("system")
  Project_Mutuelle      Project_Mutuelle      @relation(fields: [mutuelleId, clientId, softwareLabel, projectLabel], references: [id, clientId, softwareLabel, projectLabel])

  @@id([mutuelleId, clientId, softwareLabel, projectLabel, establishmentNic, societyId])
}

model Project_Mutuelle {
  slug                           String                           @unique
  id                             String
  clientId                       String
  projectLabel                   String
  isApproved                     Boolean                          @default(false)
  isPending                      Boolean                          @default(false)
  isOpen                         Boolean                          @default(true)
  softwareLabel                  String
  source                         String                           @default("analyse")
  label                          String
  status                         String                           @default("En cours")
  address1                       String
  address2                       String?                          @default("")
  address3                       String?                          @default("")
  address4                       String?                          @default("")
  postalCode                     String
  city                           String
  country                        String
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime                         @updatedAt
  createdBy                      String
  Project_Establishment_Mutuelle Project_Establishment_Mutuelle[]
  Project_Mutuelle_Archived      Project_Mutuelle_Archived[]

  @@id([id, clientId, softwareLabel, projectLabel])
}

model Project_Mutuelle_Archived {
  slug             String           @unique @default(cuid())
  id               String
  clientId         String
  projectLabel     String
  softwareLabel    String
  source           String           @default("analyse")
  label            String
  status           String           @default("En cours")
  address1         String
  address2         String?          @default("")
  address3         String?          @default("")
  address4         String?          @default("")
  postalCode       String
  city             String
  country          String
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  createdBy        String
  version          Int
  Project_Mutuelle Project_Mutuelle @relation(fields: [id, clientId, softwareLabel, projectLabel], references: [id, clientId, softwareLabel, projectLabel])

  @@id([id, clientId, softwareLabel, projectLabel, version])
}

model Logger {
  id                   String   @id @default(cuid())
  level                String
  message              String
  scope                String
  createdAt            DateTime @default(now())
  createdBy            String
  isArchived           Boolean  @default(false)
  clientId             String?
  userId               String?
  client               Client?  @relation(fields: [clientId], references: [siren])
  project              Project? @relation(fields: [clientId, projectLabel, projectSoftwareLabel], references: [clientId, label, softwareLabel])
  projectSoftwareLabel String?
  projectLabel         String?
}

model Project_Salary {
  clientId                String
  projectLabel            String
  softwareLabel           String
  id                      String
  label                   String
  description             String?
  status                  String                    @default("En cours")
  baseType                String?
  base                    String?
  rateType                String?
  rate                    String?
  source                  String                    @default("analyse")
  amoutType               String?
  amount                  String?
  slug                    String                    @unique
  isApproved              Boolean                   @default(false)
  isPending               Boolean                   @default(false)
  isOpen                  Boolean                   @default(true)
  Project                 Project                   @relation(fields: [clientId, softwareLabel, projectLabel], references: [clientId, softwareLabel, label])
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  createdBy               String                    @default("system")
  Project_Society_Salary  Project_Society_Salary[]
  Project_Salary_Archived Project_Salary_Archived[]

  @@id([id, clientId, softwareLabel, projectLabel])
}

model Project_Salary_Archived {
  clientId       String
  projectLabel   String
  softwareLabel  String
  id             String
  label          String
  description    String?
  method         String
  status         String
  baseType       String
  base           String
  rateType       String
  version        Int
  rate           String
  amoutType      String
  source         String
  amount         String
  slug           String
  isApproved     Boolean
  isPending      Boolean
  isOpen         Boolean
  Project_Salary Project_Salary @relation(fields: [id, clientId, softwareLabel, projectLabel], references: [id, clientId, softwareLabel, projectLabel])

  @@id([id, clientId, softwareLabel, projectLabel, version])
}

model Project_Contribution {
  clientId                      String
  projectLabel                  String
  softwareLabel                 String
  id                            String
  label                         String
  description                   String?
  status                        String                          @default("En cours")
  baseType                      String
  base                          String
  employeeType                  String
  employee                      String
  employType                    String
  employ                        String
  source                        String
  amoutType                     String
  amount                        String
  slug                          String
  isApproved                    Boolean                         @default(false)
  isPending                     Boolean                         @default(false)
  isOpen                        Boolean                         @default(true)
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @updatedAt
  createdBy                     String                          @default("system")
  Project_Society_Contribution  Project_Society_Contribution[]
  Project                       Project                         @relation(fields: [clientId, softwareLabel, projectLabel], references: [clientId, softwareLabel, label])
  Project_Contribution_Archived Project_Contribution_Archived[]

  @@id([id, clientId, softwareLabel, projectLabel])
}

model Project_Contribution_Archived {
  clientId             String
  projectLabel         String
  softwareLabel        String
  id                   String
  label                String
  description          String?
  status               String
  baseType             String
  base                 String
  employeeType         String
  employee             String
  employType           String
  employ               String
  source               String
  amoutType            String
  amount               String
  slug                 String
  isApproved           Boolean
  isPending            Boolean
  isOpen               Boolean
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  createdBy            String
  Project_Contribution Project_Contribution @relation(fields: [id, clientId, softwareLabel, projectLabel], references: [id, clientId, softwareLabel, projectLabel])

  @@id([id, clientId, softwareLabel, projectLabel])
}

model Project_Society_Contribution {
  clientId             String
  projectLabel         String
  softwareLabel        String
  societyId            String
  contributionId       String
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  createdBy            String               @default("system")
  Project_Society      Project_Society      @relation(fields: [clientId, softwareLabel, projectLabel, societyId], references: [clientId, softwareLabel, projectLabel, siren], map: "Society")
  Project_Contribution Project_Contribution @relation(fields: [clientId, softwareLabel, projectLabel, contributionId], references: [clientId, softwareLabel, projectLabel, id], map: "Contribution")

  @@id([clientId, softwareLabel, projectLabel, societyId, contributionId])
}

model Project_Society_Salary {
  clientId        String
  projectLabel    String
  softwareLabel   String
  societyId       String
  salaryId        String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  createdBy       String          @default("system")
  Project_Society Project_Society @relation(fields: [clientId, softwareLabel, projectLabel, societyId], references: [clientId, softwareLabel, projectLabel, siren], map: "Society")
  Project_Salary  Project_Salary  @relation(fields: [clientId, softwareLabel, projectLabel, salaryId], references: [clientId, softwareLabel, projectLabel, id], map: "Salary")

  @@id([clientId, softwareLabel, projectLabel, societyId, salaryId])
}

model Constant_Legal {
  id            String
  level         String   @default("Standard")
  label         String
  description   String?
  idccCode      String   @default("9999")
  Idcc          Idcc?    @relation(fields: [idccCode], references: [code])
  value         String
  dateStart     String
  softwareLabel String?
  clientId      String?
  projectLabel  String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String
  slug          String   @unique
  sourceId      String?

  @@id([id, level, dateStart])
}

model Client_Constant_Legal {
  id            String
  level         String   @default("Client")
  label         String
  clientId      String
  description   String?
  idccCode      String   @default("9999")
  Idcc          Idcc?    @relation(fields: [idccCode], references: [code])
  Client        Client   @relation(fields: [clientId], references: [siren], onDelete: Cascade)
  value         String
  dateStart     String
  softwareLabel String?
  projectLabel  String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String
  slug          String   @unique
  sourceId      String?

  @@id([id, level, dateStart, clientId])
}

model Software_Constant_Legal {
  id            String
  level         String   @default("Logiciel")
  label         String
  description   String?
  idccCode      String   @default("9999")
  Idcc          Idcc?    @relation(fields: [idccCode], references: [code])
  value         String
  dateStart     String
  softwareLabel String
  clientId      String
  software      Software @relation(fields: [softwareLabel, clientId], references: [label, clientId], onDelete: Cascade)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String
  slug          String   @unique
  isArchived    Boolean  @default(false)

  @@id([id, level, dateStart, clientId, softwareLabel])
}

model Project_Constant {
  code                 String
  level                String   @default("Projet")
  label                String
  description          String
  idccCode             String
  Idcc                 Idcc?    @relation(fields: [idccCode], references: [code])
  value                String
  dateStart            String
  projectLabel         String
  projectSoftwareLabel String
  clientId             String
  Project              Project  @relation(fields: [clientId, projectLabel, projectSoftwareLabel], references: [clientId, label, softwareLabel], onDelete: Cascade)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  createdBy            String

  @@id([code, dateStart, projectLabel, projectSoftwareLabel, clientId])
}

model Idcc {
  code                            String                            @id
  label                           String
  createdAt                       DateTime                          @default(now())
  updatedAt                       DateTime                          @updatedAt
  createdBy                       String                            @default("system")
  SoftwareItems                   Software_Items[]
  ConstantLegal                   Constant_Legal[]
  ProjectConstant                 Project_Constant[]
  Software_Constant_Legal         Software_Constant_Legal[]
  Classification                  Classification[]
  Client_Classification           Client_Classification[]
  Software_Classification         Software_Classification[]
  Client_Constant_Legal           Client_Constant_Legal[]
  Table_Seniority                 Table_Seniority[]
  Client_Table_Seniority          Client_Table_Seniority[]
  Software_Table_Seniority        Software_Table_Seniority[]
  Table_Age                       Table_Age[]
  Table_Age_Row                   Table_Age_Row[]
  Client_Table_Age                Client_Table_Age[]
  Client_Table_Age_Row            Client_Table_Age_Row[]
  Software_Table_Age              Software_Table_Age[]
  Software_Table_Age_Row          Software_Table_Age_Row[]
  Table_Keeping_Wage              Table_Keeping_Wage[]
  Table_Keeping_Wage_Row          Table_Keeping_Wage_Row[]
  Client_Table_Keeping_Wage       Client_Table_Keeping_Wage[]
  Client_Table_Keeping_Wage_Row   Client_Table_Keeping_Wage_Row[]
  Software_Table_Keeping_Wage     Software_Table_Keeping_Wage[]
  Software_Table_Keeping_Wage_Row Software_Table_Keeping_Wage_Row[]
  Table_Wage                      Table_Wage[]
  Table_Wage_Row                  Table_Wage_Row[]
  Client_Table_Wage               Client_Table_Wage[]
  Client_Table_Wage_Row           Client_Table_Wage_Row[]
  Software_Table_Wage             Software_Table_Wage[]
  Software_Table_Wage_Row         Software_Table_Wage_Row[]
}

model Processus {
  id                 String
  label              String
  level              String               @default("Standard")
  description        String?
  theme              String
  order              Int
  version            Int
  clientId           String?
  softwareLabel      String?
  slug               String               @unique
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  createdBy          String               @default("system")
  isArchived         Boolean              @default(false)
  isDuplicate        Boolean              @default(false)
  idOrigin           String?
  Form               Form[]
  Software_Processus Software_Processus[]

  @@id([id, version])
}

model Project_Processus {
  id            String
  version       Int
  clientId      String
  label         String
  processusSlug String
  description   String?
  projectLabel  String
  softwareLabel String
  isOpen        Boolean  @default(false)
  isFinish      Boolean  @default(false)
  isPending     Boolean  @default(true)
  isReopen      Boolean  @default(false)
  isProgress    Boolean  @default(false)
  slug          String   @unique
  status        String   @default("Non d√©marr√©")
  updatedAt     DateTime @updatedAt
  createdAt     DateTime @default(now())
  createdBy     String   @default("system")
  order         Int
  Project       Project  @relation(fields: [clientId, projectLabel, softwareLabel], references: [clientId, label, softwareLabel])

  @@id([clientId, projectLabel, softwareLabel, id, version])
}

model Form {
  id               String
  label            String
  isCreate         Boolean
  isEdit           Boolean
  level            String       @default("Standard")
  description      String?
  isArchived       Boolean      @default(false)
  slug             String       @unique
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  createdBy        String       @default("system")
  Form_Input       Form_Input[]
  processusId      String
  processusVersion Int
  isDuplicate      Boolean      @default(false)
  idOrigin         String?
  Processus        Processus    @relation(fields: [processusId, processusVersion], references: [id, version])

  @@id([id, level])
}

model Form_Input {
  id                String
  type              String
  level             String   @default("Standard")
  label             String
  slug              String   @unique
  formId            String
  zodLabel          String
  disabled          Boolean  @default(false)
  placeholder       String?
  minLenght         Int?
  defaultValue      String?
  maxLenght         Int?
  min               Int?
  max               Int?
  selectTableSource String?
  selectFieldSource String?
  selectOption      String?
  required          Boolean  @default(false)
  readOnly          Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  createdBy         String   @default("system")
  Form              Form     @relation(fields: [formId, level], references: [id, level])
  order             Int

  @@id([id, level, formId, label])
}

model Prisma_Seed {
  name          String   @id
  description   String
  order         Int
  status        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String
  previousLabel String
  error         String?
}

model Task {
  label       String   @id()
  isSwitch    Boolean  @default(false)
  isUpload    Boolean  @default(false)
  accept      String?
  description String
  level       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String   @default("system")
  bookLabel   String?
}

model Client_Task {
  label       String
  slug        String   @unique
  level       String
  isSwitch    Boolean  @default(false)
  isUpload    Boolean  @default(false)
  accept      String?
  description String
  clientId    String
  status      String   @default("actif")
  bookLabel   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String   @default("system")
  owner       String
  message     String?
  dateStart   DateTime @default(now())
  deadline    DateTime
  Client      Client   @relation(fields: [clientId], references: [siren])

  @@id([label, clientId])
}

model Software_Task {
  label         String
  isSwitch      Boolean  @default(false)
  isUpload      Boolean  @default(false)
  isObligatory  Boolean  @default(false)
  accept        String
  slug          String   @unique
  softwareLabel String
  description   String
  multiple      Boolean  @default(false)
  clientId      String
  Software      Software @relation(fields: [softwareLabel, clientId], references: [label, clientId])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String   @default("system")

  @@id([label, clientId, softwareLabel])
}

model Item {
  id                       String
  nature                   String
  label                    String?
  type                     String
  baseType                 String?
  base                     String?
  rateType                 String?
  rate                     String?
  coeffType                String?
  coeff                    String?
  amountType               String?
  amount                   String?
  employeeContributionType String?
  employerContributionType String?
  employerContribution     String?
  employeeContribution     String?
  comment                  String?
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
  createdBy                String

  @@id([id, type])
}

model Counter {
  id          String   @id
  label       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String   @default("system")
  inHours     Boolean  @default(false)
  inDays      Boolean  @default(false)
  isArchived  Boolean  @default(false)
}

model Software_Counter {
  id            String
  label         String
  description   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String   @default("system")
  softwareLabel String
  clientId      String
  inHours       Boolean  @default(false)
  inDays        Boolean  @default(false)
  Software      Software @relation(fields: [softwareLabel, clientId], references: [label, clientId])
  isArchived    Boolean  @default(false)

  @@id([id, label, clientId, softwareLabel])
}

model Software_Profile {
  id            String
  label         String
  description   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String   @default("system")
  softwareLabel String
  clientId      String
  Software      Software @relation(fields: [softwareLabel, clientId], references: [label, clientId])
  isArchived    Boolean  @default(false)

  @@id([id, label, clientId, softwareLabel])
}

model Software_Absence {
  label            String
  id               String
  description      String?
  isSocialSecurity Boolean  @default(false)
  softwareLabel    String
  slug             String   @unique
  clientId         String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  createdBy        String   @default("system")
  dsnCode          String?
  dsnLabel         String?
  Software         Software @relation(fields: [softwareLabel, clientId], references: [label, clientId])
  methodOfCalcul   String
  population       String?
  itemHour         String?
  itemDay          String?
  counter          String?
  isPrintable      Boolean  @default(false)
  isArchived       Boolean  @default(false)

  @@id([label, id, clientId, softwareLabel])
}

model Default_Setting {
  id          String
  label       String
  description String?
  value       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String   @default("system")

  @@id([id, label, value])
}

model Dsn_OPS {
  type     String
  id       String  @id
  label    String
  dsnId    String?
  address1 String?
  codeZip  String?
  city     String?
}

model Dsn_Absence {
  id        String   @id
  label     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String   @default("system")
}

model TextArea {
  label       String   @id
  blockNote   Json
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String   @default("system")
}

model Feedback {
  id         String   @id @default(cuid())
  feature    String
  message    String
  level      String
  isBlocked  Boolean  @default(false)
  isArchived Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  createdBy  String
}

model Project_DSN {
  projectLabel     String
  softwareLabel    String
  clientId         String
  dsnDate          String
  isApproved       Boolean            @default(false)
  isPending        Boolean            @default(false)
  isOpen           Boolean            @default(true)
  slug             String             @unique
  random           String
  dsnSiret         String
  Project          Project            @relation(fields: [clientId, projectLabel, softwareLabel], references: [clientId, label, softwareLabel])
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  createdBy        String             @default("system")
  Project_DSN_Data Project_DSN_Data[]

  @@id([projectLabel, softwareLabel, clientId, dsnDate, dsnSiret])
}

model Project_DSN_Data {
  projectLabel  String
  softwareLabel String
  clientId      String
  id            String
  fraction      String
  value         String
  dsnDate       String
  dsnSiret      String
  label         String
  Project_DSN   Project_DSN @relation(fields: [projectLabel, softwareLabel, clientId, dsnDate, dsnSiret], references: [projectLabel, softwareLabel, clientId, dsnDate, dsnSiret])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  createdBy     String      @default("system")
  siret         String
  dsnId         String
  uuid          String      @default(cuid())

  @@id([projectLabel, softwareLabel, clientId, fraction, siret, dsnId, dsnDate, dsnSiret, uuid])
}

model Accumulation {
  id          String   @id
  label       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String   @default("system")
}

model Software_Accumulation {
  id            String
  label         String
  description   String?
  clientId      String
  softwareLabel String
  Software      Software @relation(fields: [softwareLabel, clientId], references: [label, clientId])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String   @default("system")
  isArchived    Boolean  @default(false)
  slug          String   @unique

  @@id([id, label, clientId, softwareLabel])
}

model Classification {
  level       String   @default("Standard")
  id          String
  type        String
  label       String
  description String?
  idIdcc      String
  Idcc        Idcc?    @relation(fields: [idIdcc], references: [code])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String   @default("system")

  @@id([id, idIdcc, type])
}

model Client_Classification {
  level       String   @default("Client")
  id          String
  slug        String   @unique
  type        String
  label       String
  description String?
  idIdcc      String
  clientId    String
  Idcc        Idcc?    @relation(fields: [idIdcc], references: [code])
  Client      Client   @relation(fields: [clientId], references: [siren])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String   @default("system")

  @@id([id, idIdcc, type, clientId])
}

model Software_Classification {
  level         String   @default("Logiciel")
  id            String
  type          String
  slug          String   @unique
  label         String
  description   String?
  idIdcc        String
  clientId      String
  softwareLabel String
  Idcc          Idcc?    @relation(fields: [idIdcc], references: [code])
  Software      Software @relation(fields: [softwareLabel, clientId], references: [label, clientId])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String   @default("system")

  @@id([id, idIdcc, type, clientId, softwareLabel])
}

model Dsn_Structure {
  id    String @id
  label String
  type  String
}

model Project_Approve {
  clientId      String
  softwareLabel String
  projectLabel  String
  processusSlug String
  rowSlug       String
  userId        String
  projectSlug   String
  clientSlug    String
  label         String
  isApproved    Boolean  @default(false)
  isRefused     Boolean  @default(false)
  comment       String?
  slug          String   @unique @default(cuid())
  response      String   @default("En attente")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String   @default("system")
  User          User     @relation(fields: [userId], references: [id])
  Project       Project  @relation(fields: [clientId, softwareLabel, projectLabel], references: [clientId, softwareLabel, label])

  @@id([clientId, softwareLabel, projectLabel, rowSlug, processusSlug, userId])
}

model Rate_At {
  id        String   @id
  label     String
  startDate String
  endDate   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String   @default("system")
}

model Project_Establishment_Service {
  clientId              String
  softwareLabel         String
  projectLabel          String
  establishmentNic      String
  serviceId             String
  societyId             String
  Project_Establishment Project_Establishment @relation(fields: [establishmentNic, clientId, softwareLabel, projectLabel, societyId], references: [nic, clientId, softwareLabel, projectLabel, societyId])
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  createdBy             String                @default("system")
  Project_Service       Project_Service       @relation(fields: [serviceId, clientId, softwareLabel, projectLabel], references: [id, clientId, softwareLabel, projectLabel])

  @@id([serviceId, clientId, softwareLabel, projectLabel, establishmentNic, societyId])
}

model Project_Service {
  clientId                      String
  softwareLabel                 String
  projectLabel                  String
  description                   String?
  id                            String
  level                         String
  slug                          String                          @unique
  status                        String                          @default("En cours")
  highterLevel                  String?
  label                         String
  isApproved                    Boolean                         @default(false)
  isPending                     Boolean                         @default(false)
  isOpen                        Boolean                         @default(true)
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @updatedAt
  createdBy                     String                          @default("system")
  Project                       Project                         @relation(fields: [clientId, softwareLabel, projectLabel], references: [clientId, softwareLabel, label])
  Project_Establishment_Service Project_Establishment_Service[]
  Project_Service_Archieved     Project_Service_Archieved[]

  @@id([clientId, softwareLabel, projectLabel, id])
}

model Project_Service_Archieved {
  clientId        String
  softwareLabel   String
  projectLabel    String
  slug            String          @unique @default(cuid())
  version         Int
  description     String?
  id              String
  level           String
  status          String
  highterLevel    String?
  label           String
  Project_Service Project_Service @relation(fields: [clientId, softwareLabel, projectLabel, id], references: [clientId, softwareLabel, projectLabel, id])
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  createdBy       String          @default("system")

  @@id([clientId, softwareLabel, projectLabel, id, version])
}

model Software_Processus {
  clientId         String
  softwareLabel    String
  Software         Software  @relation(fields: [softwareLabel, clientId], references: [label, clientId])
  Processus        Processus @relation(fields: [processusId, processusVersion], references: [id, version])
  processusId      String
  processusVersion Int
  order            Int
  updatedAt        DateTime  @updatedAt
  createdAt        DateTime  @default(now())
  createdBy        String    @default("system")

  @@id([clientId, softwareLabel, processusId, processusVersion])
}
